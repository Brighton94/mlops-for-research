[project]
name = "mlops-for-research"
version = "0.1.0"
description = "A template repository for implementing MLOps practices in research projects"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.18.0",
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "transformers>=4.36.0",
    "mlflow>=2.9.0",
    "dvc>=3.50.0",
    "dvc-s3>=2.25.0",
    "optuna>=3.5.0",
    "hydra-core>=1.3.0",
    "wandb>=0.16.0",
    "tensorboard>=2.15.0",
    "tensorboardX>=2.6.0",
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
]
requires-python = ">=3.11"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=24.1.1",
    "ruff>=0.1.9",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "commitizen>=3.20.0",
    "types-all>=1.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "PL",  # pylint
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line length violations
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.isort]
known-first-party = ["src"]
combine-as-imports = true

[tool.ruff.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "pandas.*",
    "torch.*",
    "transformers.*",
    "mlflow.*",
    "dvc.*",
    "optuna.*",
    "hydra.*",
    "wandb.*",
    "tensorboard.*",
    "tensorboardX.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src --cov-report=term-missing"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
update_changelog_on_bump = true 